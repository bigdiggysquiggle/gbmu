valgrind --track-origins=yes ./gbmu test-roms/cpu_instrs/cpu_instrs.gb 
==12045== Memcheck, a memory error detector
==12045== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==12045== Using Valgrind-3.18.1 and LibVEX; rerun with -h for copyright info
==12045== Command: ./gbmu test-roms/cpu_instrs/cpu_instrs.gb
==12045== 
==12045== Conditional jump or move depends on uninitialised value(s)
==12045==    at 0x112E5E: interrupt_check (cpu.cc:76)
==12045==    by 0x112E5E: cpu::opcode_parse() (cpu.cc:983)
==12045==    by 0x117794: gb::frame_advance() (gb.cc:45)
==12045==    by 0x10DA57: main (main.cc:67)
==12045==  Uninitialised value was created by a heap allocation
==12045==    at 0x4846013: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12045==    by 0x1179F6: make_unique<cpu, std::shared_ptr<mmu>&, std::shared_ptr<ppu>&> (unique_ptr.h:962)
==12045==    by 0x1179F6: gb::gb() (gb.cc:18)
==12045==    by 0x10D9B3: main (main.cc:32)
==12045== 
==12045== Conditional jump or move depends on uninitialised value(s)
==12045==    at 0x11BBD9: offcheck (ppu.hpp:46)
==12045==    by 0x11BBD9: offcheck (ppu.hpp:22)
==12045==    by 0x11BBD9: ppu::_cycle(bool) (ppu.cc:76)
==12045==    by 0x112E81: cycle (cpu.hpp:241)
==12045==    by 0x112E81: cpu::opcode_parse() (cpu.cc:984)
==12045==    by 0x117794: gb::frame_advance() (gb.cc:45)
==12045==    by 0x10DA57: main (main.cc:67)
==12045==  Uninitialised value was created by a heap allocation
==12045==    at 0x4846013: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12045==    by 0x1178E8: allocate (new_allocator.h:127)
==12045==    by 0x1178E8: allocate (alloc_traits.h:460)
==12045==    by 0x1178E8: __allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<ppu, std::allocator<ppu>, (__gnu_cxx::_Lock_policy)2> > > (allocated_ptr.h:97)
==12045==    by 0x1178E8: __shared_count<ppu, std::allocator<ppu>, std::shared_ptr<mmu>&, sys_type> (shared_ptr_base.h:648)
==12045==    by 0x1178E8: __shared_ptr<std::allocator<ppu>, std::shared_ptr<mmu>&, sys_type> (shared_ptr_base.h:1342)
==12045==    by 0x1178E8: shared_ptr<std::allocator<ppu>, std::shared_ptr<mmu>&, sys_type> (shared_ptr.h:409)
==12045==    by 0x1178E8: allocate_shared<ppu, std::allocator<ppu>, std::shared_ptr<mmu>&, sys_type> (shared_ptr.h:863)
==12045==    by 0x1178E8: make_shared<ppu, std::shared_ptr<mmu>&, sys_type> (shared_ptr.h:879)
==12045==    by 0x1178E8: gb::gb() (gb.cc:17)
==12045==    by 0x10D9B3: main (main.cc:32)
==12045== 
==12045== Conditional jump or move depends on uninitialised value(s)
==12045==    at 0x110B93: cpu::imeCheck() (cpu.cc:42)
==12045==    by 0x1177A3: gb::frame_advance() (gb.cc:48)
==12045==    by 0x10DA57: main (main.cc:67)
==12045==  Uninitialised value was created by a heap allocation
==12045==    at 0x4846013: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==12045==    by 0x1179F6: make_unique<cpu, std::shared_ptr<mmu>&, std::shared_ptr<ppu>&> (unique_ptr.h:962)
==12045==    by 0x1179F6: gb::gb() (gb.cc:18)
==12045==    by 0x10D9B3: main (main.cc:32)
==12045== 
terminate called after throwing an instance of 'char const*'
==12045== 
==12045== Process terminating with default action of signal 6 (SIGABRT): dumping core
==12045==    at 0x4DEA34C: __pthread_kill_implementation (in /usr/lib/libc.so.6)
==12045==    by 0x4D9D4B7: raise (in /usr/lib/libc.so.6)
==12045==    by 0x4D87533: abort (in /usr/lib/libc.so.6)
==12045==    by 0x4ACB7ED: __gnu_cxx::__verbose_terminate_handler() [clone .cold] (vterminate.cc:95)
==12045==    by 0x4AD7C4B: __cxxabiv1::__terminate(void (*)()) (eh_terminate.cc:48)
==12045==    by 0x4AD7CB8: std::terminate() (eh_terminate.cc:58)
==12045==    by 0x4AD7F5D: __cxa_throw (eh_throw.cc:95)
==12045==    by 0x10D7FA: laz_e::getPix() [clone .part.0] (lazy.hpp:54)
==12045==    by 0x10D830: getPix (ppu.cc:435)
==12045==    by 0x10D830: ppu::_drawpix(bool) [clone .cold] (ppu.cc:254)
==12045==    by 0x11B1BC: ppu::drawpix() (ppu.cc:185)
==12045==    by 0x11BE56: _cycle (ppu.cc:133)
==12045==    by 0x11BE56: ppu::_cycle(bool) (ppu.cc:74)
==12045==    by 0x1161E2: cycle (cpu.hpp:241)
==12045==    by 0x1161E2: cpu::opcode_parse() (cpu.cc:2164)
==12045== 
==12045== HEAP SUMMARY:
==12045==     in use at exit: 9,710,722 bytes in 55,770 blocks
==12045==   total heap usage: 83,410 allocs, 27,640 frees, 25,539,027 bytes allocated
==12045== 
==12045== LEAK SUMMARY:
==12045==    definitely lost: 0 bytes in 1 blocks
==12045==    indirectly lost: 0 bytes in 0 blocks
==12045==      possibly lost: 7,016,444 bytes in 48,244 blocks
==12045==    still reachable: 2,694,278 bytes in 7,525 blocks
==12045==                       of which reachable via heuristic:
==12045==                         multipleinheritance: 88 bytes in 1 blocks
==12045==         suppressed: 0 bytes in 0 blocks
==12045== Rerun with --leak-check=full to see details of leaked memory
==12045== 
==12045== For lists of detected and suppressed errors, rerun with: -s
==12045== ERROR SUMMARY: 751558 errors from 3 contexts (suppressed: 0 from 0)
Aborted (core dumped)
