don't forget to restore your mmu to block vram access

ideally find a way to map several arrays into one super array
--seems entirely possible, tough part is managing IO masks
---echoed memory can be the same array put in twice

above seems doable by putting everything into a gameboy class
-still need to work out how to bit mask IO properly
--make i/oreg a class and define =operator?
---would need to do for vram too in order to handle modes

-putting everything in gb class also makes properly timing things easier
 by allowing me to have instructions do their things in 4 cycle increments

have save states first export cpu variables, then append with all the ram info from the mmu

fix sprite reading/printing. determine where the bug is and fix it

implement a separate window renderer to solve logic issues

ppu running slow relative to other emulators

verify whether or not mbc carts always have ram
--halt_bug.gb

instr_timing is borked

interrupt_time is borked

mem_timing is borked

oam_bug isn't preserved

implement sound
